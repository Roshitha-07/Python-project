import csv
import statistics
import os
from utils.constants import CSV_FILE, COLUMNS

def calculate_total_marks(row):
    """Helper: Sum all marks fields for a student"""
    marks_fields = ["Mid1_Marks", "Mid2_Marks", "Quiz_Marks", "Final_Marks"]
    total = 0
    for field in marks_fields:
        try:
            total += int(row[field]) if row[field] else 0
        except ValueError:
            total += 0
    return total

def assign_grade(total):
    """Helper: Assign grade based on total marks"""
    if total >= 85:
        return "A"
    elif total >= 70:
        return "B"
    elif total >= 50:
        return "C"
    else:
        return "D"

def generate_summary():
    """UC5 - Generate summary report for a branch & year"""

    branch = input("\nEnter Branch: ").strip()
    year = input("Enter Year: ").strip()

    students = []
    totals = []

    try:
        with open(CSV_FILE, "r") as f:
            reader = csv.DictReader(f)
            for row in reader:
                if row["Branch"].lower() == branch.lower() and row["Year"] == year:
                    total = calculate_total_marks(row)
                    grade = assign_grade(total)
                    row["Total_Marks"] = total
                    row["Grade"] = grade
                    students.append(row)
                    totals.append(total)
    except FileNotFoundError:
        print(f"‚ùå {CSV_FILE} not found.")
        return

    if not students:
        print("‚ö†Ô∏è No students found for given branch/year.")
        return

    # Summary calculations
    total_students = len(students)
    avg_marks = round(statistics.mean(totals), 2)
    highest = max(totals)
    lowest = min(totals)

    grade_distribution = {"A": 0, "B": 0, "C": 0, "D": 0}
    for s in students:
        grade_distribution[s["Grade"]] += 1

    # Print report
    print("\nüìä Parent-Teacher Meeting Report")
    print(f"Branch: {branch} | Year: {year}")
    print(f"Total Students: {total_students}")
    print(f"Average Marks: {avg_marks}")
    print(f"Highest: {highest} | Lowest: {lowest}")
    print("Grade Distribution:")
    for g, count in grade_distribution.items():
        print(f"  {g}: {count}")

    # Export report to CSV
    filename = f"data/report_{branch}_{year}.csv"
    with open(filename, "w", newline="") as f:
        fieldnames = COLUMNS + ["Total_Marks", "Grade"]
        writer = csv.DictWriter(f, fieldnames=fieldnames)
        writer.writeheader()
        writer.writerows(students)

    print(f"\n‚úÖ Report exported to {filename}")
